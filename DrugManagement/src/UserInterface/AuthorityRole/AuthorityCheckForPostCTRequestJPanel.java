/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.AuthorityRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.InsuranceOrganization;
import Business.Organization.Organization;
import Business.Organization.PostClinicalTrialOrganization;
import Business.PostClinicalPerson.PostClinicalPerson;
import Business.PostClinicalReport.PostClinicalReport;
import Business.Request.Request;
import Business.Request.WorkRequest;
import Business.UserAccount.UserAccount;
import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author Sumanth
 */
public class AuthorityCheckForPostCTRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AuthorityCheckForPostCTRequestJPanel
     */
    JPanel userProcessContainer;
    UserAccount account;
    Organization organization;
    Enterprise enterprise;
    EcoSystem system;
    Request request;

    AuthorityCheckForPostCTRequestJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, Enterprise enterprise, EcoSystem system, WorkRequest request) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.organization = organization;
        this.enterprise = enterprise;
        this.system = system;
        this.request = request;
        valueSlider.setValue((int) request.getPostCtInterpretationScore());
        pnChart.setLayout(new java.awt.BorderLayout());
        pieChartCreation();
    }

    private DefaultCategoryDataset createDataset() {
        // same dataset for line chart and bar chart
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        for (PostClinicalReport p : request.getPostClinicalReportDirectory().getPostClinicalReportDirectory()) {
            dataset.addValue(p.getFinalReportValue(), "Person", p.getPostClinicalPerson().getName());
        }
        return dataset;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnChart = new javax.swing.JPanel();
        btn3DPie = new javax.swing.JButton();
        btnBarChart = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        approveBtn = new javax.swing.JButton();
        denyBtn = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        valueSlider = new javax.swing.JSlider();

        setBackground(new java.awt.Color(0, 153, 153));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnChart.setBackground(new java.awt.Color(0, 153, 153));
        pnChart.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout pnChartLayout = new javax.swing.GroupLayout(pnChart);
        pnChart.setLayout(pnChartLayout);
        pnChartLayout.setHorizontalGroup(
            pnChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 742, Short.MAX_VALUE)
        );
        pnChartLayout.setVerticalGroup(
            pnChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 386, Short.MAX_VALUE)
        );

        add(pnChart, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 746, 390));

        btn3DPie.setText("3D Pie Chart");
        btn3DPie.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 204, 153), new java.awt.Color(255, 255, 0), new java.awt.Color(255, 255, 0), new java.awt.Color(255, 255, 0)));
        btn3DPie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3DPieActionPerformed(evt);
            }
        });
        add(btn3DPie, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 520, 150, 30));

        btnBarChart.setText("Bar Chart");
        btnBarChart.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 153, 153), new java.awt.Color(255, 255, 0), new java.awt.Color(255, 255, 0), new java.awt.Color(255, 255, 0)));
        btnBarChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBarChartActionPerformed(evt);
            }
        });
        add(btnBarChart, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 520, 110, 30));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 153, 153));
        jLabel1.setText("Final Score for request");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 0, 290, 47));

        approveBtn.setText("Approve Drug");
        approveBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 204, 153), new java.awt.Color(255, 255, 0), new java.awt.Color(255, 255, 0), new java.awt.Color(255, 255, 0)));
        approveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveBtnActionPerformed(evt);
            }
        });
        add(approveBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 620, 220, 40));

        denyBtn.setText("Deny Drug");
        denyBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 204, 153), new java.awt.Color(255, 255, 0), new java.awt.Color(255, 255, 0), new java.awt.Color(255, 255, 0)));
        denyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                denyBtnActionPerformed(evt);
            }
        });
        add(denyBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 620, 170, 40));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        valueSlider.setBackground(new java.awt.Color(255, 255, 255));
        valueSlider.setFont(new java.awt.Font("Thonburi", 1, 14)); // NOI18N
        valueSlider.setMajorTickSpacing(1);
        valueSlider.setMaximum(15);
        valueSlider.setMinimum(-15);
        valueSlider.setPaintLabels(true);
        valueSlider.setPaintTicks(true);
        valueSlider.setSnapToTicks(true);
        valueSlider.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 890, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(valueSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 850, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 70, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(valueSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 890, 70));
    }// </editor-fold>//GEN-END:initComponents

    private void btn3DPieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3DPieActionPerformed
        // create dataset for pie chart
        pieChartCreation();
    }//GEN-LAST:event_btn3DPieActionPerformed

    private void btnBarChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBarChartActionPerformed
        // create bar chart
        JFreeChart barChart = ChartFactory.createBarChart(
                "Score Interpretation vs Person",
                "Person", "Score Interpretation",
                createDataset(),
                PlotOrientation.VERTICAL,
                true, true, false);
        CategoryPlot plot = (CategoryPlot) barChart.getPlot();
        plot.getRenderer().setSeriesPaint(0, Color.BLUE);
        ChartPanel chartPanel = new ChartPanel(barChart);
        pnChart.removeAll();
        pnChart.add(chartPanel, BorderLayout.CENTER);
        pnChart.validate();
    }//GEN-LAST:event_btnBarChartActionPerformed

    public void pieChartCreation() {
        DefaultPieDataset dataset = new DefaultPieDataset();
        for (PostClinicalReport p : request.getPostClinicalReportDirectory().getPostClinicalReportDirectory()) {
            dataset.setValue(p.getPostClinicalPerson().getName(), Math.abs(p.getFinalReportValue()));
        }
        // create pir chart
        JFreeChart chart = ChartFactory.createPieChart3D(
                "Score Interpretation", // chart title
                dataset, // data
                true, // include legend
                true,
                false);
        // set chart properties
        final PiePlot3D plot = (PiePlot3D) chart.getPlot();
        plot.setStartAngle(270);
        plot.setForegroundAlpha(0.60f);
        plot.setInteriorGap(0.02);
        // create chart panel the add it to swing panel in  jframe
        ChartPanel chartPanel = new ChartPanel(chart);
        pnChart.removeAll();        // clear panel before add new chart
        pnChart.add(chartPanel, BorderLayout.CENTER);
        pnChart.validate();         // refresh panel to display new chart
    }

    private void approveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveBtnActionPerformed
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult;
        if(request.getInterpretationScore()>=9){
            dialogResult = JOptionPane.showConfirmDialog(null, "Interpretation Score is > 9 .Do you still want to Approve the request? ", "Warning", dialogButton);
        }else{
            dialogResult = JOptionPane.showConfirmDialog(null, "Would you like to Approve the Drug? ", "Warning", dialogButton);
        }
        if (dialogResult == JOptionPane.YES_OPTION) {
            request.setStatus("Final Approval Completed");
            request.setReceiver(request.getSender());
            request.setSender(account);
            request.setResolveDate(new Date());
            request.setResult("Completed");
            userProcessContainer.remove(this);
            Component[] componentArray = userProcessContainer.getComponents();
            Component component = componentArray[componentArray.length - 1];
            AuthorityWorkAreaJPanel sysAdminwjp = (AuthorityWorkAreaJPanel) component;
            sysAdminwjp.populateTable();
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.previous(userProcessContainer);
        }
    }//GEN-LAST:event_approveBtnActionPerformed

    private void denyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_denyBtnActionPerformed
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult;
        if(request.getInterpretationScore()<9){
            dialogResult = JOptionPane.showConfirmDialog(null, "Interpretation Score is < 9 .Do you still want to Deny the request? ", "Warning", dialogButton);
        }else{
            dialogResult = JOptionPane.showConfirmDialog(null, "Would you like to Deny the Drug? ", "Warning", dialogButton);
        }
        if (dialogResult == JOptionPane.YES_OPTION) {
            request.setStatus("Post Clinical Trial Denied");
            request.setReceiver(request.getSender());
            request.setSender(account);
            request.setDrugValid(false);
            Organization org = null;
            for (Network n : system.getNetworkList()) {
                for (Enterprise e : n.getEnterpriseDirectory().getEnterPriseList()) {
                    for (Organization o : e.getOrganizationDirectory().getOrganizationList()) {
                        if (o instanceof InsuranceOrganization) {
                            org = o;
                            break;
                        }
                    }
                }
            }
            if (org != null) {
                org.getRequestList().getRequestList().add(request);
            }
            userProcessContainer.remove(this);
            Component[] componentArray = userProcessContainer.getComponents();
            Component component = componentArray[componentArray.length - 1];
            AuthorityWorkAreaJPanel sysAdminwjp = (AuthorityWorkAreaJPanel) component;
            sysAdminwjp.populateTable();
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.previous(userProcessContainer);
        }
    }//GEN-LAST:event_denyBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton approveBtn;
    private javax.swing.JButton btn3DPie;
    private javax.swing.JButton btnBarChart;
    private javax.swing.JButton denyBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel pnChart;
    private javax.swing.JSlider valueSlider;
    // End of variables declaration//GEN-END:variables
}
